{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/My posts/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/Posts.jsx","components/Profile/My posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","avatarAndDescription","src","photos","large","Preloader","Post","post","message","likes","maxLength10","maxLengthCreator","Posts","React","memo","postsElements","posts","map","p","id","NewPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","PostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.2b15ceb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarAndDescription\":\"ProfileInfo_avatarAndDescription__3_rdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3Qqu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__1t8R1\"};","import React, { useEffect, useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    \r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n       props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >\r\n                        {props.status || '-----'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nconst ProfileInfo = ({profile,status, updateStatus }) =>{\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.avatarAndDescription}>\r\n            <img src={profile.photos.large} />\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    )\r\n};\r\nexport default ProfileInfo;","import s from './Post.module.css'\r\nconst Post = (props) =>{\r\n    return (\r\n        <div className={s.post}>\r\n            \r\n            <img src='https://sun9-68.userapi.com/impf/c851132/v851132376/1188a1/2LuEdvm-8sQ.jpg?size=1720x2160&quality=96&sign=2cd993cfc5b64e41790739f26db3a77f&type=album' />\r\n             {props.message}\r\n            <div>\r\n                <button> \r\n                    {props.likes} likes\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;\r\n","import Post from './Post/Post'\r\nimport s from './Posts.module.css'\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    let postsElements = props.posts\r\n        .map(p => <Post id={p.id} message={p.message} likes={p.likes} />)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h3>my posts </h3>\r\n            <NewPostReduxForm onSubmit={addNewPost} />\r\n            {postsElements}\r\n        </div>\r\n    )\r\n});\r\n\r\nconst NewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name='newPostText' validate={ [required, maxLength10] } placeholder='start to write a new post'/>\r\n        </div>\r\n\r\n        <div>\r\n            <button >Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({\r\n    form: \"profileNewPostForm\"\r\n})(NewPostForm)\r\nexport default Posts;","\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator,  } from '../../../Redux/profile-reducer'\r\n\r\nimport Posts from './Posts'\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        newPostText : state.profilePage.newPostText,\r\n        posts : state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost : (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps) (Posts);\r\n\r\nexport default PostsContainer;","import ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport Posts from './My posts/Posts'\r\nimport s from './Profile.module.css'\r\nimport PostsContainer from './My posts/PostsContainer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\n\r\nconst Profile = (props) =>{\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className={s.socialHeader}>\r\n                <img src='https://borutofan.ru/img/jpg/27.jpg'/>\r\n            </div> */}\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <PostsContainer  />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport {getUserProfile, getUserStatus, updateStatus} from './../../Redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile : state.profilePage.profile,\r\n    status : state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect (mapStateToProps,{getUserProfile, getUserStatus, updateStatus} ),\r\n    withRouter,\r\n    //withAuthRedirect\r\n) (ProfileContainer)\r\n\r\n// let authRedirectContainer = withAuthRedirect(ProfileContainer)\r\n    \r\n\r\n// let WithUrlDataContainerComponent = withRouter(authRedirectContainer)\r\n\r\n// export default connect (mapStateToProps,{getUserProfile} ) (WithUrlDataContainerComponent);\r\n"],"sourceRoot":""}